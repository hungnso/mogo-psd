@mixin size($width, $height) {
	width: $width;
	height: $height;
	
}

@mixin absoluteCenter($direction:"left", $position: absolute){
	position: $position;

	@if $direction =='left'{
		left: 50%;
		transform: translateX(-50%);
	}
	@if $direction =='top'{
		top: 50%;
		transform: translateY(-50%);
	}
	@if $direction =='both'{
		left: 50%;
		top: 50%;

		transform: translate(-50%,-50%);
	}

}

///backgroupcolor
@mixin bg($color: red) { 
	background-color:$color;
	
}

////abslute fulll 

@mixin asbolfull(){
	position: absolute;
	top:0 ;
	left: 0;
	width: 100%;
	height: 100%;
}

////mixin maxWidth
@mixin maxWidth($breakpoint){
	@media screen and (max-width: $breakpoint) {
		@content;
		
	}
}

@mixin minWidth ($breakpoint){
	@media screen and (min-width: $breakpoint) {
		@content;
		
	}
} 


///hidescrool
@mixin hideScroll(){
	-ms-overflow-style: none;
	scrollbar-width: none;
	&::-webkit-scrollbar{
		display: none;
	}
}

@mixin flexBox($align-item:stretch,$justify-content:stretch, $flex-direction: row, $flex-wrap:nowrap){
	display: flex;
	align-items:$align-item;
	justify-content:$justify-content;
	flex-direction:$flex-direction ;
	flex-wrap:$flex-wrap;
}
@mixin flexbox(
  $align-items: stretch,
  $justify-content: flex-start,
  $direction: row,
  $flex: flex,
  $wrap: nowrap
) {
  display: $flex;
  align-items: $align-items;
  justify-content: $justify-content;
  flex-direction: $direction;
  flex-wrap: $wrap;
}
@mixin textCamp ($line-camp) {
	display:-webkit-box;
		-webkit-line-clamp:$line-camp;
		-webkit-box-orient: vertical;
		overflow: hidden;
		text-overflow: ellipsis;
		word-break: break-word;
}


@mixin hoverEffect($itemClass,$contentClass, $transform: "true"){
	#{$itemClass} {
		position: relative;
		z-index: 1;
		transition: all 0.25s linear;
		will-change: transform;
		cursor: pointer;
		#{$contentClass}{
				opacity: 0;
			visibility: hidden;
			@include asbolfull();
			@include flexBox(center,center,column);
			background: linear-gradient(to bottom, 
			rgba($primary-color, 0.8), 
			rgba($secondary-color, 0.8));
			transition: all 0.25s linear;

			z-index: 2;
		}
		@if $transform == "true"{
			&:after{
				content: "";
				@include asbolfull();
				background-color: $third-color;
				z-index: -1;
				transition: all 0.25s linear;
				will-change: transform;

			}
		}
		&:hover{
			#{$contentClass}{
				opacity: 1;
				visibility:visible;
			}
			@if $transform == "true"{
				transform: translate(-1rem,-1rem);
				&::after{
					transform: translate(1rem,1rem);
				}
			}
		}
	}
}


@mixin touchSlider($width:80%,$gap:2rem,$padding:1rem){
		display: grid !important;
		justify-content: flex-start !important;
		grid-template-columns: unset;
		grid-auto-columns: $width;
		grid-row-gap: $gap;
		grid-auto-flow: column;
		overflow-x: auto;
		@include hideScroll;
		padding: $padding;
		scroll-snap-type: x mandatory;
		scroll-snap-stop: always;
	& > *{
		scroll-snap-align: start;
		width: auto;
	}
}



